server:
  port: 8080

management:
  server:
    port: 9001
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

spring:
  application:
    name: oauth2-jwe-server

  datasource:
    url: jdbc:mysql://localhost:3306/oauth2_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:oauth2_user}
    password: ${DB_PASSWORD:oauth2_pass}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: HikariPool-OAuth2

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  security:
    oauth2:
      authorizationserver:
        client:
          oauth2-client:
            registration:
              client-id: oauth2-client
              client-secret: "{bcrypt}$2a$10$MIkW8zqHnVqjcs/JNmYqNOWHS6B7AqjCs4zF4JvLqKqJvL8rJ8Kqm"
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              authorization-grant-types:
                - authorization_code
                - refresh_token
                - password
                - client_credentials
              redirect-uris:
                - http://localhost:8080/login/oauth2/code/oauth2-client
              scopes:
                - read
                - write
                - admin

logging:
  config: classpath:logback-spring.xml
  level:
    com.example: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG

# JWE Configuration
jwe:
  encryption:
    key: "mySecretEncryptionKey123456789012" # 32 characters for AES-256
  signing:
    key: "mySecretSigningKey1234567890123456" # 32 characters

# Rate Limiting Configuration
rate-limit:
  auth:
    requests-per-second: 5
    burst-capacity: 10